General instructions to setup Ubuntu, and ROS2 on Desktop and RPi.

Install Ubuntu 20.04.0x LTS and setup Wi-Fi:
	RPi:
		Use Raspberry Pi Imager to install Ubuntu 20.04.4 LTS Server 64-bit
		First time boot user/pass: ubuntu/ubuntu
		Change to ubuntu/password (or your preference)
	Desktop:
		https://ubuntu.com/download/desktop	
	Wi-Fi:		
		sudoedit /etc/netplan/50-cloud-init.yaml
			add Wi-Fi configuration, example (no tabs, two spaces, keep quotation marks):
				version: 2
				ethernets:
				eth0:
					dhcp4: true
					optional: true
				wifis:
				wlan0:
					dhcp4: true
					optional: true
					access-points:				
					lab-wifi-ssid:
						password: "password"
		sudo touch /etc/cloud/cloud.cfg.d/99-custom-networking.cfg
		sudoedit /etc/cloud/cloud.cfg.d/99-custom-networking.cfg	
			add the below line verbatim:
				network: {config: disabled}
		Apply netplan:
			sudo netplan apply
		Check for connection and IP address:
			ip a
	
Install ROS2 Foxy:
	RPi:
		https://roboticsbackend.com/install-ros2-on-raspberry-pi/
	Desktop:
		https://roboticsbackend.com/install-ros2-on-raspberry-pi/
		Instead of installing ros-base install the desktop version:		
			sudo apt install ros-foxy-desktop
	
Clone repository and build:
	RPi & Desktop:	  	
		git clone https://github.com/reubenstr/zuko
		cd zuko/quad_ws	
		source /opt/ros/foxy/setup.bash	
		colcon build
	
At every startup, soure ROS, CD into the workspace, and source the workspace automatically:
	RPi & Desktop:
		echo "source /opt/ros/foxy/setup.bash" >> ~/.bashrc
		echo "cd zuko/quad_ws" >> ~/.bashrc
		echo "source install/local_setup.bash" >> ~/.bashrc

RPi only:
	Install dependencies:
		pip install smbus2		
		TODO: add more dependencies!

	Grant access to I2C every startup:	
		echo "sudo chmod a+rw /dev/i2c-*" >> ~/.bashrc

	Install bluetooth for wireless game controller:
		$ sudo apt install pi-bluetooth
		$ sudo reboot	
		$ sudo bluetoothctl
		 
		In the bluetoothctl terminal, find the controller's MAC address:
			scan on		
			scan off
		You should see bluetooth devices, example: "[CHG] Controller 84:30:95:48:0F:3C Pairable: yes"			
		Place the controller in pairing mode (PS4: press share and PS buttons)
		Copy the controller's MAC address and enter the command (using your MAC address):
			connect 84:30:95:48:0F:3C
		PS4 controller LED should be solid blue when paired.
		Add the controller to the trusted list automatically connect:
			trust 84:30:95:48:0F:3C	

		For Desktop, test the controller using jstest-gtk:
			sudo apt install jstest-gtk
				
	
	Servo calibration (execute from the workspace directory):
		./quad_ws/src/quad/quad/servo_calibration.py

Desktop only:
	Install dependencies:		
		pip install gym
		pip install pybullet
		TODO: add more dependencies!
		
RPi & Desktop:
	Install dependencies:
		...
	Launch:
		See ros-commands document to startup the robot.





Misc:
	Show connect wireless controller info:
		cat /proc/bus/input/devices
		ls /dev/input/by-id/
		dmesg | grep input

	sudo apt install bluez-tools

	sudo apt install evtest

	
	
